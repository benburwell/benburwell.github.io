---
layout: post
title: Open Bug Tracking Empowers Users, but it Hasn’t Been Perfected
description: Allowing users to view the status of bugs and file bug reports contributes to development, but we’re not all the way there yet.
date: 2014-10-10 00:00:00
category: writing
image: http://www.benburwell.com/assets/images/heisenbug.svg
redirect_from: "/writing/open-bug-tracking-empowers-users/"
---


The rise of networked information economy described by Yochai Benkler has both enabled and been enabled by the free software movement. A central facet of this emerging culture is its [participatory nature](http://www.benkler.org/Benkler_Wealth_Of_Networks.pdf). This is reflected in the flagships of the free culture movement such as Wikipedia, where the time and expertise of many is combined to create a competitive alternative to commercial offerings. Though free software aims to be a participatory medium, due to the highly technical and often specialized nature, the barriers to entry for the average “netizen” are often relatively high.

<!--more-->

In order to organize any software project a separate program called a bug or issue tracker is often used to categorize and track the progress of bugs in the code, almost like a giant and detailed to-do list. A bug tracker could be anything from a spreadsheet to a sophisticated routing and tracking system that integrates with help desk software and documentation. The larger a project is, the more [crucial it becomes to use a bug tracker](http://www.joelonsoftware.com/articles/fog0000000029.html), as it facilitates the necessary communication between developers and testers as to who is working on what at any given time. Often, bug trackers are accessed by members of the software team through a web browser, as this is an easy and efficient way to collaborate. However, with traditional commercial software, the contents of the bug tracker tends to be considered highly sensitive, proprietary information that should not be disclosed in order to protect the company’s competitive advantage. After all, exposing to the public issues with the software might result in them switching to a competitor. However, for free or open source software projects, using a publicly available bug tracker that is open to anyone who wants to see it is the de-facto standard, and rightfully so.

There are fundamentally two ways that using an open bug tracker benefits an open source project. First and foremost, as Benkler points out, free software projects tend to have a wide variety of contributors. From gurus who know the code base inside and out, to casual hackers, every contributor brings a different level of skill and expertise to the project. In software engineering, it is commonly understood that you cannot expect everyone to have identical skills such that their role in the team is totally flexible. To maximize the team’s productivity, it is best to take into account each member’s skill set and expertise. For example, if one of the gurus of a mature open-source project finds an error in some of the help files, it would probably be a waste of time to go and fix it when they could be spending their time addressing a highly complex and sophisticated bug or issue with the code. Rather, filing a bug report would allow a newcomer to the project who has not yet accumulated the technical sophistication to address the documentation. In free and open source software, the bug tracker is how this organization and self-assignment of tasks takes place.

In addition to facilitating communication and task assignment, the use of an open bug tracker reduces the barriers to participation in the project by non-technical people, the “users.” By allowing anyone to report an issue they have while using the software increases the feedback to the development team, which is especially important in a free-software context where alpha testing may simply be getting people to download and try out a release candidate rather than relying on an in-house test team. Furthermore, anyone can easily check on the status of an issue they experienced; if you want to know when that annoying problem you had the other day will be fixed, checking the bug tracker will tell you (or at least hopefully give you an idea). Thus, not only does using an openly available bug tracker provide free and open source software with some of the same infrastructure enjoyed by commercial software projects, but it also enables the project to harness the power of the collective in a truly “networked information economy” way.

In addition to facilitating the project, using an open bug tracking system makes an important statement about the collective ownership of the project. By allowing anyone to interact with the system that steers the project as it progresses, the collective nature transcends lofty philosophical ideals and actually puts them into physical form. The enabling of a participatory culture in this way cements the collective ownership and collective developmen of the intellectual property created by the free or open source project.
With the increasing amount of popular open-source software, it seems that everyday users of software are becoming accustomed to or even expecting that bug tracking is available. Recently, Microsoft announced the preview of Windows 10, the next version of its operating system. Windows 10 incorporates [a “Feedback” app](http://www.theregister.co.uk/2014/10/08/early_windows_10_feedback_for_microsoft/) which attempts to gather user feedback on problems that they experience, and publicly viewable suggestions that other users have made.  One suggestion stated, “If Microsoft would like its customers to do free software testing, could they at least provide a proper bug-tracking tool with security level and current status.” Granted, the early adopters of a not-yet-released operating system are probably not typical users, but the desire to have access to Microsoft’s internal systems not to steal corporate secrets but to improve their products is an interesting juxtaposition of free software and hacker culture with one of the largest commercial software companies.

And other companies are taking the cue. [Atlassian](https://www.atlassian.com/) is an Australian company that makes tools for developers, including a Git server ([Stash](https://www.atlassian.com/software/stash)), issue tracker ([JIRA](https://www.atlassian.com/software/jira)), and other products. Their [philosophy](https://www.atlassian.com/company/about/values) is rooted in the hacker ethic, that information should be free and available (unless there is some need to keep it private). While their products are not open source in the sense that anyone can download and contribute to the software, they do provide you with the complete source code when you buy their software [so that you can customize it to fit your needs](https://www.atlassian.com/end-user-agreement/). Furthermore, their bug tracking system is [completely open to the public](https://jira.atlassian.com/secure/Dashboard.jspa). Anyone can file bugs, add comments, track the progress, and see when it might be implemented. In addition to providing a live demonstration of their product, it helps communicate with their customers about what features are coming up and to be responsive to their requests. Again, this example is atypical in providing public access to their bug tracker in that their customers generally use bug tracking software every day at work. Their model seems to have been successful at bridging the gap between a completely closed ecosystem like Microsoft’s and an open-source model where it can be hard for a company to make a profit.

This approach to bug tracking is still not perfect. For Atlassian, it works because of the technical knowledge their customers have, but seeing a page from a bug tracker like Atlassian JIRA or the open-source Bugzilla would still be confusing for the average person. Microsoft seems to have swung too far in the opposite direction with their Feedback tool; while it’s certainly easy to report an issue, there is no follow-up as to whether the issue is being addressed. What we’re missing is the tool that makes bug tracking accessible to everyone, regardless of technical background.

Unsurprisingly, bug tracking is not often the focus of open source projects—they are generally much more focused on writing software than they are on developing a system for collaboration and user feedback. Thus, by picking a free, off-the-shelf issue tracker, they simplify the lives of the developers without taking into account the users. This is a common pitfall of open-source projects; many begin as one or two hackers who want to build something cool or useful, and it grows into a product while maintaing the hacker-centric mindset rather than focusing development around user requirements by assuming that the users and the developers are the same group of people. This is the crucial link for bug tracking in open source projects, it links the users to the developers. The problem is that it usually does so in a developer-centric way such that while it’s theoretically possible for users to report or check the status of bugs, they typically don’t know that they can, or the process is too complicated to follow. Only when this disconnect is bridged will free and open source software be truly participatory for the masses, rather than just for the technologically skilled.
